trigger: none

resources:
  pipelines:
  #- pipeline: releasePipeline
  #  source: Co-ordinated Build Test
  #  trigger:
  #    branches:
  #    - release/*
  #    - releaseYml

  - pipeline: releasePipeline
    source: Co-ordinated Build Test
    version: 143428

stages:
- stage: ValidateSDK
  dependsOn: []
  jobs:
  - template: templates/release-SDKTests.yml
    parameters:
      jobName: WinSDK
      displayName: Windows SDK Test
      imageName: windows-latest

  - template: templates/release-SDKTests.yml
    parameters:
      jobName: LinuxSDK
      displayName: Linux SDK Test
      imageName: ubuntu-latest

  - template: templates/release-SDKTests.yml
    parameters:
      jobName: macOSSDK
      displayName: macOS SDK Test
      imageName: macOS-latest

- stage: PRCreation
  dependsOn: []
  jobs:
  - deployment: CreatePRInMaster
    displayName: Update README.md and metadata.json
    pool: server
    environment: PSReleaseCreatePR

- stage: ValidateGlobalTool
  dependsOn: []
  jobs:
  - template: templates/release-GlobalToolTest.yml
    parameters:
      jobName: WinGblTool
      displayName: Global Tool Test Windows
      imageName: windows-latest

  - template: templates/release-GlobalToolTest.yml
    parameters:
      jobName: LinuxWinGblTool
      displayName: Global Tool Test Linux
      imageName: ubuntu-latest

- stage: ValidatePkgNames
  dependsOn: []
  displayName: Package Names validation
  jobs:
  - job: ValidatePkgNames
    pool:
      vmImage: macOS-latest
    steps:
      - pwsh: |
          Write-Host 'Testing for pre-conditions'
        displayName: Test pre-conditions
      - template: templates/release-ValidatePackageNames.yml

- stage: StartDocker
  dependsOn: []
  displayName: Kick Off Docker Staging build
  jobs:
  - deployment: PSDockerKickOff
    displayName: Start Docker build
    pool: server
    environment: PSReleaseDockerKickOff

- stage: ManualValidation
  dependsOn: []
  displayName: Manual Validation
  jobs:
  - deployment: ValidateWinPkg
    displayName: Validate Windows Packages
    pool: server
    environment: PSReleaseWinPkgValidate

  - deployment: ValidateLinuxPkg
    displayName: Validate Linux Packages
    pool: server
    environment: PSReleaseLinuxPkgValidate

- stage: ReleaseAutomation
  dependsOn: []
  jobs:
  - job: RAKickOff
    steps:
    - pwsh: |
        Write-Host "Start release automation here"
      displayName: Start Release Automation

- stage: GitHubDraftRelease
  dependsOn:
  - ValidateSDK
  - PRCreation
  - ValidateGobalTool
  - ValidatePkgNames
  - StartDocker
  - ManualValidation
  - ReleaseAutomation

  jobs:
  - deployment: AzureBlobPublic
    displayName: Make Azure Blob Public
    pool:
      vmImage: windows-latest
    environment: PSReleaseAzureBlobPublic
    strategy:
      runOnce:
        deploy:
          steps:
          - download: none
          - pwsh: |
              Write-Host "Make azure blob public"
            displayName: Make Azure Blob public"

  - job: GitHubDraft
    displayName: Create GitHub Draft release
    pool:
      vmImage: windows-latest
    dependsOn: AzureBlobPublic
    steps:
    - pwsh: |
        Write-Host "Upload artifacts and create GitHub Draft Release"
      displayName: Create GitHub Draft Release

- stage: GitHubManualTasks
  dependsOn: GitHubDraftRelease
  jobs:
  - deployment: UpdateChangeLog
    displayName: Update Change Log
    pool : server
    environment: PSReleaseUpdateChangeLog

  - deployment: PushTag
    displayName: Push Git Tag
    pool : server
    environment: PSReleasePushTag

  - deployment: MakeDraftPublic
    displayName: Make GitHub Draft public
    pool : server
    environment: PSReleaseDraftPublic

- stage: PublishPackages
  dependsOn: GitHubManualTasks
  jobs:
  - job: PublishNuget
    pool:
      vmImage: windows-latest
    steps:
    - pwsh: |
        Write-Host "Publish Nuget packages"
      displayName: Publish Nuget packages

  - job: PublishPkgsMsftCom
    pool:
      vmImage: ubuntu-latest
    steps:
    - pwsh: |
        Write-Host "Publish packages.microsoft.com"
      displayName: Publish to packages.microsoft.com

- stage: ChangesToMaster
  dependsOn: PublishPackages
  jobs:
  - deployment: MergeToMaster
    displayName: Make sure changes are in master
    pool: server
    environment: PSReleaseChangesToMaster

- stage: ReleaseSnapAndDocker
  dependsOn:
    - PublishPackages
    - ChangesToMaster
  jobs:
  - deployment: ReleaseDocker
    displayName: Release Docker
    pool: server
    environment: PSReleaseDockerRelease

  - deployment: ReleaseSnap
    displayName: Release Snap
    pool: server
    environment: PSReleaseSnapRelease

- stage: UpdateDotnetDocker
  dependsOn: GitHubManualTasks
  displayName: Update DotNet SDK Docker images
  jobs:
  - deployment: DotnetSDkDocker
    displayName: Update .NET SDK docker images
    pool: server
    environment: PSReleaseUpdateDotnetDocker

- stage: BuildInfoJson
  dependsOn: GitHubManualTasks
  displayName: Upload BuildInfoJson
  jobs:
  - job: UploadJson
    pool:
      vmImage: windows-latest
    steps:
    - pwsh: |
        Write-Host "Upload build json"
      displayName: Upload Build JSON for upgrade notification

- stage: ReleaseVPack
  dependsOn: GitHubManualTasks
  displayName: Release VPack
  jobs:
  - job: VPackRelease
    pool:
     vmImage: windows-latest
    steps:
    - pwsh: |
        Write-Host "Release VPack"
      displayName: Release VPack

- stage: ReleaseClose
  displayName: Finish Release
  dependsOn:
  - ReleaseVPack
  - BuildInfoJson
  - UpdateDotnetDocker
  - ReleaseSnapAndDocker
  - ChangesToMaster
  jobs:
  - deployment: RetainBuild
    displayName: Retain Build
    pool: server
    environment: PSReleaseRetainBuild

  - deployment: DeleteBranch
    displayName: Delete release branch
    pool: server
    environment: PSReleaseDeleteBranch
