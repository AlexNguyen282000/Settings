jobs:
  - job: APIScan
    variables:
      - name: runCodesignValidationInjection
        value : false
      - name: NugetSecurityAnalysisWarningLevel
        value: none
      - name: ReleaseTagVar
        value: fromBranch
      # Defines the variables APIScanClient, APIScanTenant and APIScanSecret
      - group: PS-PS-APIScan

    pool:
      name: PowerShell1ES
      demands:
        - ImageOverride -equals PSMMS2019-Secure

    # APIScan can take a long time
    timeoutInMinutes: 180

    steps:
    - template: ../SetVersionVariables.yml
      parameters:
        ReleaseTagVar: $(ReleaseTagVar)
        CreateJson: yes
        UseJson: no

    - pwsh: |
        Import-Module .\build.psm1 -force
        Start-PSBootstrap
        Start-PSBuild -Configuration Release -PSModuleRestore -Clean

        $OutputFolder = Split-Path (Get-PSOutput)
        Write-Host "##vso[task.setvariable variable=BinDir]$OutputFolder"
      workingDirectory: '$(Build.SourcesDirectory)'
      displayName: 'Build PowerShell Source'

    - task: securedevelopmentteam.vss-secure-development-tools.build-task-apiscan.APIScan@2
      displayName: 'Run APIScan'
      inputs:
        softwareFolder: '$(BinDir)'
        softwareName: PowerShell
        softwareVersionNum: '$(ReleaseTagVar)'
        isLargeApp: false
        preserveTempFiles: true
        verbosityLevel: standard
        # write a status update every 5 minutes.  Default is 1 minute
        statusUpdateInterval: '00:05:00'
      env:
        AzureServicesAuthConnectionString: RunAs=App;AppId=$(APIScanClient);TenantId=$(APIScanTenant);AppKey=$(APIScanSecret)

    - task: securedevelopmentteam.vss-secure-development-tools.build-task-report.SdtReport@2
      continueOnError: true
      displayName: 'Guardian Export'
      inputs:
        GdnExportVstsConsole: true
        GdnExportSarifFile: true
        GdnExportHtmlFile: true
        GdnExportAllTools: false
        GdnExportGdnToolApiScan: true
        #this didn't do anything GdnExportCustomLogsFolder: '$(Build.ArtifactStagingDirectory)/Guardian'

    - pwsh: |
        Get-ChildItem -Path env:
      displayName: Capture Environment
      condition: succeededOrFailed()

    - task: securedevelopmentteam.vss-secure-development-tools.build-task-publishsecurityanalysislogs.PublishSecurityAnalysisLogs@3
      displayName: 'Publish Guardian Artifacts'
      inputs:
        AllTools: false
        APIScan: true
        ArtifactName: APIScan
