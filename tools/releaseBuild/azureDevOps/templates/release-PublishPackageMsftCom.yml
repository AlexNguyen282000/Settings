steps:
- pwsh: |
    $variable = 'releaseTag'
    $branch = '$(Release.Artifacts._Packages.SourceBranch)'
    if($branch -notmatch  '^.*(release[-/])')
    {
        throw "Branch name is not in release format: '$branch'"
    }

    $releaseTag = $Branch -replace '^.*(release[-/])'
    $vstsCommandString = "vso[task.setvariable variable=$Variable]$releaseTag"
    Write-Verbose -Message "setting $Variable to $releaseTag" -Verbose
    Write-Host -Object "##$vstsCommandString"
  displayName: Set Release Tag

- pwsh: |
    $packageVersion = '$(ReleaseTag)'.ToLowerInvariant() -replace '^v',''
    $vstsCommandString = "vso[task.setvariable variable=packageVersion]$packageVersion"
    Write-Host "sending " + $vstsCommandString
    Write-Host "##$vstsCommandString"
  displayName: Set Package version

- pwsh: |
   git clone https://$(AzureDevOpsPat)@mscodehub.visualstudio.com/PowerShellCore/_git/Internal-PowerShellTeam-Tools ./tools
  displayName: Clone Internal-PowerShellTeam-Tools from MSCodeHub

- pwsh: |
    $metadata = Get-Content -Path "_Packages/metadata/release.json" -Raw | ConvertFrom-Json
    ./tools/packages.microsoft.com/upload.ps1 -ReleaseTag "$(releaseTag)" -Secret "$(PackagesRepoPassword)" -BlobFolderName "$(AzureVersion)" -LTS:($metadata.LTSRelease)
  displayName: Run release script
