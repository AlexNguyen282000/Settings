name: PR-$(System.PullRequest.PullRequestNumber)-$(Date:yyyyMMdd)$(Rev:.rr)
trigger:
  # Batch merge builds together while a merge build is running
  batch: true
  branches:
    include:
    - master
    - release*
    - feature*
  paths:
    include:
    - '*'
    exclude:
    - .vsts-ci/misc-analysis.yml
    - .github/ISSUE_TEMPLATE/*
    - .dependabot/config.yml
    - test/perf/*
pr:
  branches:
    include:
    - master
    - release*
    - feature*
  paths:
    include:
    - '*'
    exclude:
    - .dependabot/config.yml
    - .github/ISSUE_TEMPLATE/*
    - .vsts-ci/misc-analysis.yml
    - .vsts-ci/windows.yml
    - .vsts-ci/windows/*
    - tools/cgmanifest.json
    - LICENSE.txt
    - test/common/markdown/*
    - test/perf/*
    - tools/releaseBuild/*
    - tools/releaseBuild/azureDevOps/templates/*
    - README.md
    - .spelling

variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  POWERSHELL_TELEMETRY_OPTOUT: 1
  # Avoid expensive initialization of dotnet cli, see: https://donovanbrown.com/post/Stop-wasting-time-during-NET-Core-builds
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  __SuppressAnsiEscapeSequences: 1

resources:
  repositories:
    - repository: Docker
      type: github
      endpoint: PowerShell
      name: PowerShell/PowerShell-Docker
      ref: master

stages:
- stage: BuildLinuxStage
  displayName: Build for Linux
  jobs:
  - template: templates/ci-build.yml
    parameters:
      pool: ubuntu-20.04
      jobName: linux_build
      displayName: linux Build

- stage: TestUbuntu
  displayName: Test for Ubuntu
  dependsOn: [BuildLinuxStage]
  jobs:
  - template: templates/nix-test.yml
    parameters:
      name: Ubuntu
      pool: ubuntu-20.04
      purpose: UnelevatedPesterTests
      tagSet: CI

  - template: templates/nix-test.yml
    parameters:
      name: Ubuntu
      pool: ubuntu-20.04
      purpose: ElevatedPesterTests
      tagSet: CI

  - template: templates/nix-test.yml
    parameters:
      name: Ubuntu
      pool: ubuntu-20.04
      purpose: UnelevatedPesterTests
      tagSet: Others

  - template: templates/nix-test.yml
    parameters:
      name: Ubuntu
      pool: ubuntu-20.04
      purpose: ElevatedPesterTests
      tagSet: Others

  - template: templates/verify-xunit.yml
    parameters:
      pool: ubuntu-20.04

- stage: TestContainer
  displayName: Test in a container
  dependsOn: [BuildLinuxStage]
  jobs:
  - job: getContainerJob
    displayName: Choose a container
    pool:
      vmImage: ubuntu-20.04
    steps:
    - checkout: self
      clean: true

    - checkout: Docker
      clean: true

    - pwsh: |
        # For PRs set the seed to the PR number so that the image is always the same
        $seed = '$(System.PullRequest.PullRequestId)'
        if(!$seed) {
          # for non-PRs use the integer identifier of the build as the seed.
          $seed = '$(System.Build.BuildId)'
        }
        $matrix = ./PowerShell-Docker/build.ps1 -GenerateMatrixJson -FullJson -Channel preview | ConvertFrom-Json
        # Filter out containers that won't run on AzDevOps Linux host as an agent
        # Windows, nano server, alpine, and any ARM image
        $linuxImages = $matrix.preview |
          Where-Object {$_.osversion -notmatch 'windows|nano|alpine|arm'} |
          Select-Object JobName, Taglist |
          Sort-Object -property JobName
        # Force mariner for now
        $marinerImage = $linuxImages | where-object {$_.JobName -like 'mariner*'}
        $i=Get-Random -Minimum 0 -Maximum $marinerImage.Count -SetSeed $seed
        $selectedImage = $marinerImage[$i]}
        Import-Module ./PowerShell/tools/ci.psm1
        $tag = $selectedImage.Taglist -split ';' | select-object -first 1
        $containerName = "mcr.microsoft.com/powershell/test-deps:$tag"
        Set-BuildVariable -Name containerName -Value $containerName -IsOutput
        Set-BuildVariable -Name containerBuildName -Value $selectedImage.JobName -IsOutput
      name: getContainerTask
      displayName: Get Container
      continueOnError: true

  - template: templates/test/nix-container-test.yml
    parameters:
      name: container
      pool: ubuntu-20.04
      purpose: UnelevatedPesterTests
      tagSet: CI

  - template: templates/test/nix-container-test.yml
    parameters:
      name: container
      pool: ubuntu-20.04
      purpose: ElevatedPesterTests
      tagSet: CI

  - template: templates/test/nix-container-test.yml
    parameters:
      name: container
      pool: ubuntu-20.04
      purpose: UnelevatedPesterTests
      tagSet: Others

  - template: templates/test/nix-container-test.yml
    parameters:
      name: container
      pool: ubuntu-20.04
      purpose: ElevatedPesterTests
      tagSet: Others

- stage: PackageLinux
  displayName: Package Linux
  dependsOn: ["BuildLinuxStage"]
  jobs:
  - template: linux/templates/packaging.yml
    parameters:
      pool: ubuntu-20.04
