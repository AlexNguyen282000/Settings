# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
parameters:
  parentJobs: []
jobs:
- job: WinPackageSigningJob
  displayName: Windows Package signing and upload
  dependsOn: ${{ parameters.parentJobs }}
  condition: succeeded()
  pool:
    type: windows
  variables:
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: 1
  - group: ESRP
  - name: repoFolder
    value: PowerShell
  - name: repoRoot
    value: $(Agent.BuildDirectory)\$(repoFolder)
  - name: complianceRepoFolder
    value: compliance
  - name: ob_outputDirectory
    value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
  steps:
  - checkout: self
    clean: true
    path: $(repoFolder)
  - checkout: ComplianceRepo
    clean: true
    path: $(complianceRepoFolder)
  - template: /tools/releaseBuild/azureDevOps/templates/SetVersionVariables.yml@self
    parameters:
      ReleaseTagVar: $(ReleaseTagVar)
  - template: /tools/releaseBuild/azureDevOps/templates/shouldSign.yml@self
  - task: DownloadBuildArtifacts@0
    displayName: 'Download artifacts'
    inputs:
      buildType: current
      downloadType: single
      artifactName: signed
      downloadPath: '$(System.ArtifactsDirectory)'
  - powershell: |
      dir "$(System.ArtifactsDirectory)\*" -Recurse
    displayName: 'Capture Downloaded Artifacts'
    continueOnError: true
  - template: EsrpSign.yml@ComplianceRepo
    parameters:
      buildOutputPath: $(System.ArtifactsDirectory)\signed
      signOutputPath: $(Build.StagingDirectory)\signedPackages
      certificateId: $(MSIX_CERT)
      pattern: |
        **\*.msix
      useMinimatch: true
      shouldSign: $(SHOULD_SIGN)
      displayName: Sign msix
  - template: EsrpSign.yml@ComplianceRepo
    parameters:
      buildOutputPath: $(System.ArtifactsDirectory)\signed
      signOutputPath: $(Build.StagingDirectory)\signedPackages
      certificateId: $(AUTHENTICODE_CERT)
      pattern: |
        **\*.exe
      useMinimatch: true
      shouldSign: $(SHOULD_SIGN)
      displayName: Sign exe
  - powershell: |
      new-item -itemtype Directory -path '$(Build.StagingDirectory)\signedPackages'
      Get-ChildItem "$(System.ArtifactsDirectory)\signed\PowerShell-$(Version)-win-*.msi*" | copy-item -Destination '$(Build.StagingDirectory)\signedPackages'
    displayName: 'Fake msi* Signing'
    condition: and(succeeded(), ne(variables['SHOULD_SIGN'], 'true'))
  - pwsh: |
      Get-ChildItem "$(System.ArtifactsDirectory)\signed\PowerShell-$(Version)-win-*.exe" | copy-item -Destination '$(Build.StagingDirectory)\signedPackages'
    displayName: 'Fake exe Signing'
    condition: and(succeeded(), ne(variables['SHOULD_SIGN'], 'true'))
  - template: /tools/releaseBuild/azureDevOps/templates/upload.yml@self
    parameters:
      architecture: x86
      version: $(version)
  - template: /tools/releaseBuild/azureDevOps/templates/upload.yml@self
    parameters:
      architecture: x64
      version: $(version)
      pdb: yes
  - template: /tools/releaseBuild/azureDevOps/templates/upload.yml@self
    parameters:
      architecture: arm64
      version: $(version)
      msi: yes
  - template: /tools/releaseBuild/azureDevOps/templates/upload.yml@self
    parameters:
      architecture: fxdependent
      version: $(version)
      msi: no
      msix: no
  - template: /tools/releaseBuild/azureDevOps/templates/upload.yml@self
    parameters:
      architecture: fxdependentWinDesktop
      version: $(version)
      msi: no
      msix: no
  - template: EsrpScan.yml@ComplianceRepo
    parameters:
      scanPath: $(Build.StagingDirectory)
      pattern: |
        **\*.msix
        **\*.msi
        **\*.zip
  - template: /tools/releaseBuild/azureDevOps/templates/step/finalize.yml@self