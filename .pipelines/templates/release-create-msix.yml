jobs:
- job: CreateMSIXBundle
  displayName: Create .msixbundle file

  variables:
    - group: msixTools
    - group: 'Azure Blob variable group'

  steps:
    - template: release-SetReleaseTagAndContainerName.yml

    - task: DownloadPipelineArtifact@2
      retryCountOnTaskFailure: 2
      inputs:
        source: specific
        project: PowerShellCore
        pipeline: '486465'
        preferTriggeringPipeline: true
        runVersion: latestFromBranch
        runBranch: '$(Build.SourceBranch)'
        artifact: drop_windows_package_package_win_arm64
        patterns: '**/*.msix'
        path: '$(Pipeline.Workspace)\releasePipeline\msix'

    - task: DownloadPipelineArtifact@2
      retryCountOnTaskFailure: 2
      inputs:
        source: specific
        project: PowerShellCore
        pipeline: '486465'
        preferTriggeringPipeline: true
        runVersion: latestFromBranch
        runBranch: '$(Build.SourceBranch)'
        artifact: drop_windows_package_package_win_x64
        patterns: '**/*.msix'
        path: '$(Pipeline.Workspace)\releasePipeline\msix'

    - task: DownloadPipelineArtifact@2
      retryCountOnTaskFailure: 2
      inputs:
        source: specific
        project: PowerShellCore
        pipeline: '486465'
        preferTriggeringPipeline: true
        runVersion: latestFromBranch
        runBranch: '$(Build.SourceBranch)'
        artifact: drop_windows_package_package_win_x86
        patterns: '**/*.msix'
        path: '$(Pipeline.Workspace)\releasePipeline\msix'

    - pwsh: |
        $cmd = Get-Command makeappx.exe -ErrorAction Ignore
        if ($cmd) {
            Write-Verbose -Verbose 'makeappx available in PATH'
            $exePath = $cmd.Source
        } else {
            $toolsDir = '$(Pipeline.Workspace)\releasePipeline\tools'
            New-Item $toolsDir -Type Directory -Force > $null
            Invoke-RestMethod -Uri '$(makeappUrl)' -OutFile "$toolsDir\makeappx.zip"
            Expand-Archive "$toolsDir\makeappx.zip" -DestinationPath "$toolsDir\makeappx" -Force
            $exePath = "$toolsDir\makeappx\makeappx.exe"

            Write-Verbose -Verbose 'makeappx was installed:'
            Get-ChildItem -Path $toolsDir -Recurse
        }

        $vstsCommandString = "vso[task.setvariable variable=MakeAppxPath]$exePath"
        Write-Host "sending " + $vstsCommandString
        Write-Host "##$vstsCommandString"
      displayName: Install makeappx tool
      retryCountOnTaskFailure: 1

    - pwsh: |
        $sourceDir = '$(Pipeline.Workspace)\releasePipeline\msix'
        $file = Get-ChildItem $sourceDir | Select-Object -First 1
        $prefix = ($file.BaseName -split "-win")[0]
        $pkgName = "$prefix.msixbundle"
        Write-Verbose -Verbose "Creating $pkgName"

        $makeappx = '$(MakeAppxPath)'
        $outputDir = "$sourceDir\output"
        New-Item $outputDir -Type Directory -Force > $null
        & $makeappx bundle /d $sourceDir /p "$outputDir\$pkgName"

        Get-ChildItem -Path $sourceDir -Recurse
        $vstsCommandString = "vso[task.setvariable variable=BundleDir]$outputDir"
        Write-Host "sending " + $vstsCommandString
        Write-Host "##$vstsCommandString"
      displayName: Create MsixBundle
      retryCountOnTaskFailure: 1

    # Upload using

    # - task: AzureFileCopy@4
    #   displayName: 'Upload MSIX Bundle package to Az Blob'
    #   retryCountOnTaskFailure: 2
    #   inputs:
    #     SourcePath: '$(BundleDir)/*.msixbundle'
    #     azureSubscription: az-blob-cicd-infra
    #     Destination: AzureBlob
    #     storage: '$(StorageAccount)'
    #     ContainerName: '$(AzureVersion)-private'
    #     resourceGroup: '$(StorageResourceGroup)'
    #   condition: succeeded()
