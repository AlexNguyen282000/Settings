#################################################################################
#                               OneBranch Pipelines                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

name: UnifiedPackageBuild-$(Build.BuildId)
trigger:
  branches:
    include:
    - master
    - release*
pr:
  branches:
    include:
    - master
    - release*

parameters:
  - name: ForceAzureBlobDelete
    displayName: Delete Azure Blob
    type: string
    values:
    - true
    - false
    default: false
  - name: InternalSDKBlobURL
    displayName: URL to the blob having internal .NET SDK
    type: string
    default: ' '
  - name: ReleaseTagVar
    displayName: Release Tag
    type: string
    default: 'fromBranch'
  - name: SKIP_SIGNING
    displayName: Skip Signing
    type: string
    default: 'NO'

resources:
  repositories:
  - repository: ComplianceRepo
    type: github
    endpoint: ComplianceGHRepo
    name: PowerShell/compliance
    ref: master
  - repository: onebranchTemplates
    type: git
    name: OneBranch.Pipelines/GovernedTemplates
    ref: refs/heads/main

variables:
  - name: PS_RELEASE_BUILD
    value: 1
  - name: DOTNET_CLI_TELEMETRY_OPTOUT
    value: 1
  - name: POWERSHELL_TELEMETRY_OPTOUT
    value: 1
  - name: nugetMultiFeedWarnLevel
    value: none
  - name: NugetSecurityAnalysisWarningLevel
    value: none
  - name: skipNugetSecurityAnalysis
    value: true
  - name: branchCounterKey
    value: $[format('{0:yyyyMMdd}-{1}', pipeline.startTime,variables['Build.SourceBranch'])]
  - name: branchCounter
    value: $[counter(variables['branchCounterKey'], 1)]
  - name: ForceAzureBlobDelete
    value: ${{ parameters.ForceAzureBlobDelete }}
  - name: Github_Build_Repository_Uri
    value: https://github.com/powershell/powershell
  - name: SBOMGenerator_Formats
    value: spdx:2.2
  - name: BUILDSECMON_OPT_IN
    value: true
  - group: PoolNames
  - name: __DOTNET_RUNTIME_FEED
    value: ${{ parameters.InternalSDKBlobURL }}
  - name: LinuxContainerImage
    value: onebranch.azurecr.io/linux/ubuntu-2004:latest
  - name: WindowsContainerImage
    value: onebranch.azurecr.io/windows/ltsc2019/vse2022:latest
  - name: CDP_DEFINITION_BUILD_COUNT
    value: $[counter('', 0)]
  - name: ReleaseTagVar
    value: ${{ parameters.ReleaseTagVar }}
  - name: SKIP_SIGNING
    value: ${{ parameters.SKIP_SIGNING }}

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@onebranchTemplates
  parameters:
    customTags: 'ES365AIMigrationTooling'
    globalSdl:
      disableLegacyManifest: true
      sbom:
        enabled: true
        packageName: Microsoft.PowerShell
      codeql:
        compiled:
          enabled: false
      credscan:
        enabled: true
        scanFolder:  $(Build.SourcesDirectory)
        suppressionsFile: $(Build.SourcesDirectory)\PowerShell\tools\credScan\suppress.json
      asyncSdl: # https://aka.ms/obpipelines/asyncsdl
        enabled: true
        forStages: [prep, macos, linux, windows, SignFiles, test_and_release_artifacts]
        credscan:
          enabled: true
          scanFolder:  $(Build.SourcesDirectory)
          suppressionsFile: $(Build.SourcesDirectory)\PowerShell\tools\credScan\suppress.json
        binskim:
          enabled: false
        apiscan:
          enabled: false
        tsaOptionsFile: $(Build.SourcesDirectory)\PowerShell\.config\tsaoptions.json

    stages:
    - stage: prep
      jobs:
      - template: /.pipelines/templates/checkAzureContainer.yml@self
    - stage: macos
      dependsOn: ['prep']
      jobs:
      - template: /.pipelines/templates/mac.yml@self
        parameters:
          buildArchitecture: x64
      - template: /.pipelines/templates/mac.yml@self
        parameters:
          buildArchitecture: arm64
    - stage: linux
      dependsOn: ['prep']
      jobs:
      - template: /.pipelines/templates/linux.yml@self
        parameters:
          buildName: deb
      - template: /.pipelines/templates/linux.yml@self
        parameters:
          buildName: rpm
          parentJob: build_deb
      - template: /.pipelines/templates/linux.yml@self
        parameters:
          buildName: fxdependent
          parentJob: build_deb
      - template: /.pipelines/templates/linux.yml@self
        parameters:
          buildName: alpine
    - stage: windows
      dependsOn: ['prep']
      jobs:
      - job: build_windows
        displayName: Build Windows -
        condition: succeeded()
        pool:
          type: windows
        variables:
        - name: runCodesignValidationInjection
          value: false
        - name: NugetSecurityAnalysisWarningLevel
          value: none
        - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
          value: 1
        - group: DotNetPrivateBuildAccess
        - name: ob_outputDirectory
          value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
        - name: ob_sdl_codeSignValidation_enabled
          value: false
        - name: ob_sdl_tsa_configFile
          value: $(Build.SourcesDirectory)\PowerShell\.config\tsaoptions.json
        - name: ob_sdl_binskim_enabled
          value: true

        strategy:
          matrix:
            x64:
              Architecture: x64
              BuildConfiguration: release
            minSize:
              Architecture: x64
              BuildConfiguration: minSize
            x86:
              Architecture: x86
              BuildConfiguration: release
            arm64:
              Architecture: arm64
              BuildConfiguration: release
            fxdependent:
              Architecture: fxdependent
              BuildConfiguration: release
            fxdependentWinDesktop:
              Architecture: fxdependentWinDesktop
              BuildConfiguration: release
        steps:
        - template: /.pipelines/templates/windows-hosted-build.yml@self

      # - template: /.pipelines/templates/windows-hosted-build.yml@self
      #   parameters:
      #     Architecture: x64
      # - template: /.pipelines/templates/windows-hosted-build.yml@self
      #   parameters:
      #     Architecture: x64
      #     BuildConfiguration: minSize
      # - template: /.pipelines/templates/windows-hosted-build.yml@self
      #   parameters:
      #     Architecture: x86
      # - template: /.pipelines/templates/windows-hosted-build.yml@self
      #   parameters:
      #     Architecture: arm64
      # - template: /.pipelines/templates/windows-hosted-build.yml@self
      #   parameters:
      #     Architecture: fxdependent
      # - template: /.pipelines/templates/windows-hosted-build.yml@self
      #   parameters:
      #     Architecture: fxdependentWinDesktop
    # - stage: SignFiles
    #   displayName: Sign files
    #   dependsOn: ['windows', 'linux', 'macos']
    #   jobs:
    #   - template: /.pipelines/templates/mac-file-signing.yml@self
    #     parameters:
    #       buildArchitecture: x64
    #   - template: /.pipelines/templates/mac-file-signing.yml@self
    #     parameters:
    #       buildArchitecture: arm64
    #   - job: SignFilesWinLinux
    #     pool:
    #       type: windows
    #     displayName: Sign files
    #     variables:
    #     - group: ESRP
    #     - name: runCodesignValidationInjection
    #       value: false
    #     - name: NugetSecurityAnalysisWarningLevel
    #       value: none
    #     - name: repoFolder
    #       value: PowerShell
    #     - name: repoRoot
    #       value: $(Agent.BuildDirectory)\$(repoFolder)
    #     - name: complianceRepoFolder
    #       value: compliance
    #     - name: ob_outputDirectory
    #       value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
    #     - name: ob_sdl_tsa_configFile
    #       value: $(Build.SourcesDirectory)\PowerShell\.config\tsaoptions.json
    #     strategy:
    #       matrix:
    #         linux-x64:
    #           runtime: linux-x64
    #           unsignedBuildArtifactContainer: drop_linux_build_deb
    #           unsignedBuildArtifactName: pwshLinuxBuild.tar.gz
    #           signedBuildArtifactName: pwshLinuxBuild.tar.gz
    #           signedArtifactContainer: authenticode-signed
    #         linux-x64-Alpine:
    #           runtime: linux-x64-Alpine
    #           unsignedBuildArtifactContainer: drop_linux_build_alpine
    #           unsignedBuildArtifactName: pwshLinuxBuild.tar.gz
    #           signedBuildArtifactName: pwshLinuxBuildAlpine.tar.gz
    #           signedArtifactContainer: authenticode-signed
    #         linux-x64-Alpine-Fxdependent:
    #           runtime: linux-x64-Alpine-Fxdependent
    #           unsignedBuildArtifactContainer: drop_linux_build_alpine
    #           unsignedBuildArtifactName: pwshAlpineFxdBuildAmd64.tar.gz
    #           signedBuildArtifactName: pwshAlpineFxdBuildAmd64.tar.gz
    #           signedArtifactContainer: authenticode-signed
    #         linux-arm32:
    #           runtime: linux-arm32
    #           unsignedBuildArtifactContainer: drop_linux_build_deb
    #           unsignedBuildArtifactName: pwshLinuxBuildArm32.tar.gz
    #           signedBuildArtifactName: pwshLinuxBuildArm32.tar.gz
    #           signedArtifactContainer: authenticode-signed
    #         linux-arm64:
    #           runtime: linux-arm64
    #           unsignedBuildArtifactContainer: drop_linux_build_deb
    #           unsignedBuildArtifactName: pwshLinuxBuildArm64.tar.gz
    #           signedBuildArtifactName: pwshLinuxBuildArm64.tar.gz
    #           signedArtifactContainer: authenticode-signed
    #         linux-fxd:
    #           runtime: linux-fxd
    #           unsignedBuildArtifactContainer: drop_linux_build_fxdependent
    #           unsignedBuildArtifactName: pwshLinuxBuild.tar.gz
    #           signedBuildArtifactName: pwshLinuxBuildFxdependent.tar.gz
    #           signedArtifactContainer: authenticode-signed
    #         linux-mariner:
    #           runtime: linux-mariner
    #           unsignedBuildArtifactContainer: drop_linux_build_rpm
    #           unsignedBuildArtifactName: pwshMarinerBuildAmd64.tar.gz
    #           signedBuildArtifactName: pwshMarinerBuildAmd64.tar.gz
    #           signedArtifactContainer: authenticode-signed
    #         linux-arm64-mariner:
    #           runtime: linux-arm64-mariner
    #           unsignedBuildArtifactContainer: drop_linux_build_rpm
    #           unsignedBuildArtifactName: pwshMarinerBuildArm64.tar.gz
    #           signedBuildArtifactName: pwshMarinerBuildArm64.tar.gz
    #           signedArtifactContainer: authenticode-signed
    #         linux-minsize:
    #           runtime: linux-minsize
    #           unsignedBuildArtifactContainer: drop_linux_build_deb
    #           unsignedBuildArtifactName: pwshLinuxBuildMinSize.tar.gz
    #           signedBuildArtifactName: pwshLinuxBuildMinSize.tar.gz
    #           signedArtifactContainer: authenticode-signed
    #         win-x64:
    #           runtime: win-x64
    #           unsignedBuildArtifactContainer: drop_windows_build_windows_x64
    #           unsignedBuildArtifactName: '**/*-symbols-win-x64.zip'
    #           signedBuildArtifactName: '-symbols-win-x64-signed.zip'
    #           signedArtifactContainer: results
    #         win-x86:
    #           runtime: win-x86
    #           unsignedBuildArtifactContainer: drop_windows_build_windows_x86
    #           unsignedBuildArtifactName: '**/*-symbols-win-x86.zip'
    #           signedBuildArtifactName: '-symbols-win-x86-signed.zip'
    #           signedArtifactContainer: results
    #         win-arm64:
    #           runtime: win-arm64
    #           unsignedBuildArtifactContainer: drop_windows_build_windows_arm64
    #           unsignedBuildArtifactName: '**/*-symbols-win-arm64.zip'
    #           signedBuildArtifactName: '-symbols-win-arm64-signed.zip'
    #           signedArtifactContainer: results
    #         win-x64-gc:
    #           runtime: win-x64-gc
    #           unsignedBuildArtifactContainer: drop_windows_build_windows_minSize
    #           unsignedBuildArtifactName: '**/*-symbols-win-x64-gc.zip'
    #           signedBuildArtifactName: '-symbols-win-x64-gc-signed.zip'
    #           signedArtifactContainer: results
    #         win-fxdependent:
    #           runtime: win-fxdependent
    #           unsignedBuildArtifactContainer: drop_windows_build_windows_fxdepedent
    #           unsignedBuildArtifactName: '**/*-symbols-win-fxdependent.zip'
    #           signedBuildArtifactName: '-symbols-win-fxdependent-signed.zip'
    #           signedArtifactContainer: results
    #         win-fxdependentWinDesktop:
    #           runtime: win-fxdependentWinDesktop
    #           unsignedBuildArtifactContainer: drop_windows_build_windows_fxdependentWinDesktop
    #           unsignedBuildArtifactName: '**/*-symbols-win-fxdependentWinDesktop.zip'
    #           signedBuildArtifactName: '-symbols-win-fxdependentWinDesktop-signed.zip'
    #           signedArtifactContainer: results
    #     steps:
    #     - template: /.pipelines/templates/sign-build-file.yml@self
    # - stage: mac_packaging
    #   displayName: macOS packaging
    #   dependsOn: ['SignFiles']
    #   jobs:
    #   - template: /.pipelines/templates/mac-package-build.yml@self
    #     parameters:
    #       buildArchitecture: x64
    #   - template: /.pipelines/templates/mac-package-build.yml@self
    #     parameters:
    #       buildArchitecture: arm64
    # - stage: linux_packaging
    #   displayName: Linux Packaging
    #   dependsOn: ['SignFiles']
    #   jobs:
    #   - template: /.pipelines/templates/linux-packaging.yml@self
    #     parameters:
    #       buildName: deb
    #   - template: /.pipelines/templates/linux-packaging.yml@self
    #     parameters:
    #       buildName: rpm
    #       uploadDisplayName: Upload and Sign
    #   - template: /.pipelines/templates/linux-packaging.yml@self
    #     parameters:
    #       buildName: alpine
    #   - template: /.pipelines/templates/linux-packaging.yml@self
    #     parameters:
    #       buildName: fxdependent
    # - stage: win_packaging
    #   displayName: Windows Packaging
    #   dependsOn: ['SignFiles']
    #   jobs:
    #   - template: /.pipelines/templates/windows-packaging.yml@self
    #     parameters:
    #       Architecture: x64
    #       parentJob: build_windows_x64_release
    #   - template: /.pipelines/templates/windows-packaging.yml@self
    #     parameters:
    #       Architecture: x64
    #       BuildConfiguration: minSize
    #       parentJob: build_windows_x64_minSize
    #   - template: /.pipelines/templates/windows-packaging.yml@self
    #     parameters:
    #       Architecture: x86
    #       parentJob: build_windows_x86_release
    #   - template: /.pipelines/templates/windows-packaging.yml@self
    #     parameters:
    #       Architecture: arm64
    #       parentJob: build_windows_arm64_release
    #   - template: /.pipelines/templates/windows-packaging.yml@self
    #     parameters:
    #       Architecture: fxdependent
    #       parentJob: build_windows_fxdependent_release
    #   - template: /.pipelines/templates/windows-packaging.yml@self
    #     parameters:
    #       Architecture: fxdependentWinDesktop
    #       parentJob: build_windows_fxdependentWinDesktop_release
    # - stage: package_signing
    #   displayName: Package Signing
    #   dependsOn: ['mac_packaging', 'linux_packaging', 'win_packaging']
    #   jobs:
    #   - template: /.pipelines/templates/windows-package-signing.yml@self
    #   - template: /.pipelines/templates/mac-package-signing.yml@self
    #     parameters:
    #       buildArchitecture: x64
    #   - template: /.pipelines/templates/mac-package-signing.yml@self
    #     parameters:
    #       buildArchitecture: arm64
    # - stage: nuget_and_json
    #   displayName: NuGet Packaging and Build Json
    #   dependsOn: ['package_signing']
    #   jobs:
    #   - template: /.pipelines/templates/nuget.yml@self
    #   - template: /.pipelines/templates/json.yml@self
    # - stage: compliance
    #   dependsOn: ['package_signing']
    #   jobs:
    #   - template: /.pipelines/templates/compliance.yml@self
    - stage: test_and_release_artifacts
      displayName: Test and Release Artifacts
      dependsOn: ['prep']
      jobs:
      - template: /.pipelines/templates/testartifacts.yml@self
      - job: release_json
        displayName: Create and Upload release.json
        pool:
          type: windows
        variables:
        - name: ob_outputDirectory
          value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
        steps:
        - checkout: self
          clean: true
        - template: /.pipelines/templates/SetVersionVariables.yml@self
          parameters:
            ReleaseTagVar: $(ReleaseTagVar)
        - powershell: |
            $metadata = Get-Content '$(Build.SourcesDirectory)/PowerShell/tools/metadata.json' -Raw | ConvertFrom-Json
            $LTS = $metadata.LTSRelease.Package
            @{ ReleaseVersion = "$(Version)"; LTSRelease = $LTS } | ConvertTo-Json | Out-File "$(Build.StagingDirectory)\release.json"
            Get-Content "$(Build.StagingDirectory)\release.json"

            if (-not (Test-Path "$(ob_outputDirectory)\metadata")) {
              New-Item -ItemType Directory -Path "$(ob_outputDirectory)\metadata"
            }

            Copy-Item -Path "$(Build.StagingDirectory)\release.json" -Destination "$(ob_outputDirectory)\metadata" -Force
          displayName: Create and upload release.json file to build artifact
          retryCountOnTaskFailure: 2
        - template: /.pipelines/templates/step/finalize.yml@self
